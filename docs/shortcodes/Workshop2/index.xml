<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Visual Computing</title><link>https://ramruizni.github.io/vc/docs/shortcodes/Workshop2/</link><description>Recent content on Visual Computing</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://ramruizni.github.io/vc/docs/shortcodes/Workshop2/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://ramruizni.github.io/vc/docs/shortcodes/Workshop2/Punto-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ramruizni.github.io/vc/docs/shortcodes/Workshop2/Punto-1/</guid><description>Ray Casting # " Es un método sencillo de renderización de modelos de geometría constructiva de sólidos.
Ray casting puede referirse a una variedad de problemas y técnicas:
.El problema general de determinar el primer objeto interceptado por un rayo
.Una técnica para determinación de las caras ocultas (HSR por sus siglas en inglés), también conocida como determinación de las superficies visibles (VSD), basada en buscar la primera intersección de un rayo lanzado desde el observador a través de cada pixel de una imagen.</description></item><item><title/><link>https://ramruizni.github.io/vc/docs/shortcodes/Workshop2/Punto-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ramruizni.github.io/vc/docs/shortcodes/Workshop2/Punto-2/</guid><description>Algoritmo de Xiaolin Wu # Para abordar adecuadamente este algoritmo, primero se analizará el algoritmo de Bresenham
Bresenham’s Line Generation Algorithm # Dada la coordenada de dos puntos A (x0, y0) y B (x1, y1). La tarea de encontrar todos los puntos intermedios necesarios para dibujar la línea AB en la pantalla con píxeles. Cada píxel tiene coordenadas enteras.
Considerese la figura que se muestra a continuación, que se dibuja utilizando el algoritmo de generación de líneas de Bresenham.</description></item></channel></rss>