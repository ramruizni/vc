<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Visual Computing</title><link>https://ramruizni.github.io/vc/</link><description>Recent content in Introduction on Visual Computing</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://ramruizni.github.io/vc/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating a New Theme</title><link>https://ramruizni.github.io/vc/posts/creating-a-new-theme/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://ramruizni.github.io/vc/posts/creating-a-new-theme/</guid><description>Introduction # This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description></item><item><title>Migrate to Hugo from Jekyll</title><link>https://ramruizni.github.io/vc/posts/migrate-from-jekyll/</link><pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate><guid>https://ramruizni.github.io/vc/posts/migrate-from-jekyll/</guid><description>Move static content to static # Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description></item><item><title>(Hu)go Template Primer</title><link>https://ramruizni.github.io/vc/posts/goisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://ramruizni.github.io/vc/posts/goisforlovers/</guid><description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description></item><item><title>Getting Started with Hugo</title><link>https://ramruizni.github.io/vc/posts/hugoisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://ramruizni.github.io/vc/posts/hugoisforlovers/</guid><description>Step 1. Install Hugo # Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs # Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:</description></item><item><title/><link>https://ramruizni.github.io/vc/docs/shortcodes/team/dfsolanol/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ramruizni.github.io/vc/docs/shortcodes/team/dfsolanol/</guid><description>Daniel Solano # Github LinkedIn
Biografía # Estudiante de Ingeniería de Sistemas de la Universidad Nacional de Colombia. Mi principal interés es el desarrollo de software - especialmente el frontend - y con un gran interés aprender sobre Computación Visual. Vivo en Bogotá y me gusta ser autodidacta.
# " Illusion Info</description></item><item><title/><link>https://ramruizni.github.io/vc/docs/shortcodes/team/jcpinedav/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ramruizni.github.io/vc/docs/shortcodes/team/jcpinedav/</guid><description>Juan Camilo Pineda # Tengo 23 años, estudio Ingeniería de Sistemas, Me gusta el análisis de datos y en mi tiempo libre suelo jugar pingñ pong y ver películas
Workshop1 Ilusión de los pasos # " La ilusión de los pasos es un experimento psicológico muy famoso. Ambos bloques parecen moverse a velocidades diferentes, pero en realidad se mueven a la misma velocidad.</description></item><item><title/><link>https://ramruizni.github.io/vc/docs/shortcodes/team/kaninoc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ramruizni.github.io/vc/docs/shortcodes/team/kaninoc/</guid><description>Kevin Alexader Niño Corredor # ======= Hola amigos, soy Alexander,estudiante de noveno semestre de ingeniería en Sistemas y computación.
Soy desarrollador backend y he desarrollado aplicaciones en los lenguajes de c++,java, javascript y python, tambien tengo conocimientos en bases de datos relacionales y no relacionales. Tengo conocimientos básicos en desarrollo frontend aunque es mi parte debil como desarrollador. Me gustaria entender como se crean ilusiones y sus respectivas aplicaciones y usos en aplicaciones web.</description></item><item><title/><link>https://ramruizni.github.io/vc/docs/shortcodes/team/ramruizni/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ramruizni.github.io/vc/docs/shortcodes/team/ramruizni/</guid><description>Rafael Mauricio Ruiz Niño # Hola. Soy Rafael Ruiz. Estudiante de Ingeniería de Sistemas de la Universidad Nacional de Colombia - Sede Bogotá.
Me gusta todo tipo de desarrollo de software y los procesos de integración contínua. Sin embargo, me he desempeñado laboralmente en el sector bancario a lo largo del desarrollo de varias aplicaciones.
Espero aprender mucho de computación visual en esta materia.
GitHub
LinkedIn
Workshop 1 # La Ilusión de Ebbinghaus es un efecto visual que nos permite percibir un objeto como más grande o más pequeño dependiendo de los elementos que lo rodeen.</description></item><item><title/><link>https://ramruizni.github.io/vc/docs/shortcodes/Workshop2/Punto-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ramruizni.github.io/vc/docs/shortcodes/Workshop2/Punto-1/</guid><description>Ray Casting # "</description></item><item><title/><link>https://ramruizni.github.io/vc/docs/shortcodes/Workshop2/Punto-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ramruizni.github.io/vc/docs/shortcodes/Workshop2/Punto-2/</guid><description>Algoritmo de Xiaolin Wu # Para abordar adecuadamente este algoritmo, primero se analizará el algoritmo de Bresenham
Bresenham’s Line Generation Algorithm # Dada la coordenada de dos puntos A (x1, y1) y B (x2, y2). La tarea de encontrar todos los puntos intermedios necesarios para dibujar la línea AB en la pantalla con píxeles. Cada píxel tiene coordenadas enteras.
Considerese la figura que se muestra a continuación, que se dibuja utilizando el algoritmo de generación de líneas de Bresenham.</description></item></channel></rss>